name: CI

on:
  push:
    branches: [main, develop, codex]
    tags:
      - "v*"
  pull_request:
    branches: [main, develop, codex]

permissions:
  contents: read
  packages: write
  security-events: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  backend-tests:
    name: Backend • Lint • Types • Tests
    runs-on: ubuntu-latest
    # TEST-ONLY ENV (dummy values; not real)
    env:
      SIP_DOMAIN: example.com
      SIP_USER: "1001"
      SIP_PASS: "secret"
      OPENAI_API_KEY: test-key
      AGENT_ID: test-agent
      ENABLE_SIP: "true"
      ENABLE_AUDIO: "true"
    steps:
      - uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            libpcap-dev \
            portaudio19-dev \
            python3-dev \
            swig

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements-dev.txt ]; then python -m pip install -r requirements-dev.txt; fi
          if [ -f requirements.txt ]; then python -m pip install -r requirements.txt; fi

      - name: Lint (backend)
        run: |
          if grep -q "^lint:" Makefile 2>/dev/null; then make lint; else echo "skip lint"; fi

      - name: Type check (backend)
        run: |
          if grep -q "^type:" Makefile 2>/dev/null; then make type; else echo "skip type"; fi

      - name: Test (backend)
        run: |
          if command -v pytest >/dev/null 2>&1; then
            pytest -q --maxfail=1 --disable-warnings \
                   --junitxml=reports/pytest-junit.xml \
                   --cov=. --cov-report=xml:reports/coverage.xml
          else
            echo "pytest not found; skipping tests"
          fi

      - name: Upload backend test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-reports
          path: |
            reports/pytest-junit.xml
            reports/coverage.xml
          if-no-files-found: ignore

  frontend-tests:
    name: Frontend • Lint • Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: web
    # TEST-ONLY ENV (dummy values; not real)
    env:
      SIP_DOMAIN: example.com
      SIP_USER: "1001"
      SIP_PASS: "secret"
      OPENAI_API_KEY: test-key
      AGENT_ID: test-agent
      ENABLE_SIP: "true"
      ENABLE_AUDIO: "true"
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: web/package-lock.json

      - name: Install frontend deps
        run: |
          if [ -f package-lock.json ]; then npm ci; else echo "No package-lock.json; skipping"; fi

      - name: Lint (frontend)
        run: |
          if npm run | grep -q " lint"; then npm run lint; else echo "skip lint"; fi

      - name: Test (frontend)
        run: |
          if npm run | grep -q " test"; then
            npm run test -- --ci --reporters=default --reporters=jest-junit
          else
            echo "skip tests"
          fi
        env:
          JEST_JUNIT_OUTPUT: reports/jest-junit.xml

      - name: Upload frontend test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-reports
          path: web/reports
          if-no-files-found: ignore

  security:
    name: Security • pip-audit • npm audit • Trivy FS
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt

      - name: pip-audit (Python deps)
        run: |
          python -m pip install --upgrade pip pip-audit
          if [ -f requirements.txt ]; then pip-audit -r requirements.txt || true; fi
          if [ -f requirements-dev.txt ]; then pip-audit -r requirements-dev.txt || true; fi

      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: web/package-lock.json

      - name: npm audit (frontend)
        working-directory: web
        run: |
          if [ -f package.json ]; then npm audit --omit=dev || true; else echo "no package.json; skip"; fi

      - name: Trivy filesystem scan
        uses: aquasecurity/trivy-action@0.24.0
        with:
          scan-type: 'fs'
          format: 'sarif'
          output: 'trivy-repo.sarif'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-repo.sarif

  build-and-push:
    name: Build & Push Docker images
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests, security]
    # Only push on branch/tag pushes, never on PRs
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }} # your PAT

      # Backend image metadata
      - name: Docker metadata (backend)
        id: meta_backend
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/sip-ai-agent-backend
          tags: |
            type=sha
            type=ref,event=tag
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build & push backend image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          target: backend
          push: true
          labels: ${{ steps.meta_backend.outputs.labels }}
          tags: ${{ steps.meta_backend.outputs.tags }}
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/sip-ai-agent-backend:buildcache
          cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/sip-ai-agent-backend:buildcache,mode=max

      # Dashboard image metadata
      - name: Docker metadata (dashboard)
        id: meta_dashboard
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/sip-ai-agent-dashboard
          tags: |
            type=sha
            type=ref,event=tag
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build & push dashboard image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          target: dashboard
          push: true
          labels: ${{ steps.meta_dashboard.outputs.labels }}
          tags: ${{ steps.meta_dashboard.outputs.tags }}
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/sip-ai-agent-dashboard:buildcache
          cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/sip-ai-agent-dashboard:buildcache,mode=max

  image-scan:
    name: Trivy • Image Scan
    runs-on: ubuntu-latest
    needs: [build-and-push]
    if: github.event_name == 'push'
    steps:
      - name: Trivy backend image
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: ghcr.io/${{ github.repository_owner }}/sip-ai-agent-backend:sha-${{ github.sha }}
          format: 'sarif'
          output: 'trivy-backend.sarif'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'

      - name: Trivy dashboard image
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: ghcr.io/${{ github.repository_owner }}/sip-ai-agent-dashboard:sha-${{ github.sha }}
          format: 'sarif'
          output: 'trivy-dashboard.sarif'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'

      - name: Upload SARIF (images)
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: .
